name: ci-cd

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: devops-labs
  REGISTRY: ghcr.io
  # GHCR requires lowercase path; ensure repo path is lowercase.
  REPO: ${{ toLower(github.repository) }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python (for pytest)
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image (load locally for tests; with cache)
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ${{ env.IMAGE_NAME }}:test
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run container under test on 8080
        run: docker run -d --rm -p 8080:8000 --name sut ${{ env.IMAGE_NAME }}:test

      - name: Probe endpoints (debug)
        run: |
          set -x
          sleep 2
          curl -i http://localhost:8080/healthz || true
          curl -i http://localhost:8080/health  || true

      - name: Wait for readiness on /healthz (30s)
        run: |
          set -e
          for i in {1..30}; do
            if curl -fsS http://localhost:8080/healthz >/dev/null; then
              echo "Service is ready"; exit 0
            fi
            sleep 1
          done
          echo "Service never returned 200 on /healthz" >&2
          exit 1

      - name: Run pytest against service
        env:
          APP_URL: http://localhost:8080
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest requests
          python -m pytest -q

      - name: Dump container logs on failure
        if: failure()
        run: docker logs sut || true

      - name: Stop container
        if: always()
        run: docker stop sut || true

      - name: Trivy scan (fail on HIGH/CRITICAL)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ env.IMAGE_NAME }}:test
          exit-code: '1'
          severity: 'HIGH,CRITICAL'

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta (labels + tags)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build & push multi-arch (amd64+arm64)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
